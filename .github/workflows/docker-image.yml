name: Docker Image CI

on:
  push:
    tags:
      - '*'
env:
  ECR_REPOSITORY: nhl_web_app
  SERVICE_ARN: arn:aws:apprunner:us-east-2:553009055951:service/nhl_app/483babf383224794a10a36d889a51e2f
  AWS_REGION: us-east-2

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: install dependencies
        working-directory: ./event_predictor_lambda
        run: |
          pip install -r requirements.txt --target .

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build the Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.ref_name }}
        run: docker build . --file Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: List out the docker images
        run: docker images

      - name: Push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.ref_name }}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update App Runner service
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.ref_name }}
          SERVICE_ARN: ${{ env.SERVICE_ARN }}
          AWS_REGION: ${{ env.AWS_REGION }}
        run: |
          aws apprunner update-service --service-arn $SERVICE_ARN --source-configuration ImageRepository="{ImageIdentifier=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG, ImageRepositoryType=ECR}" --region $AWS_REGION

#
#      - name: Wait for update to finish
#        run: |
#          sleep 10
#          aws apprunner wait service-stable --service-arn ${{ env.SERVICE_ARN }} --region us-west-2
#
#      - name: Deploy App Runner service
#        uses: aws-actions/aws-app-runner-deploy@v1
#        with:
#          service-name: my-app-runner-service
#          region: us-west-2
#          branch: main
#          build-command: npm run build
#          start-command: npm start